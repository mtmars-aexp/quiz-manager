[{"H:\\Code\\Synoptic\\quiz-manager\\quiz-frontend\\src\\index.js":"1","H:\\Code\\Synoptic\\quiz-manager\\quiz-frontend\\src\\App.js":"2","H:\\Code\\Synoptic\\quiz-manager\\quiz-frontend\\src\\components\\Home.js":"3","H:\\Code\\Synoptic\\quiz-manager\\quiz-frontend\\src\\components\\Secret.js":"4","H:\\Code\\Synoptic\\quiz-manager\\quiz-frontend\\src\\components\\Error.js":"5","H:\\Code\\Synoptic\\quiz-manager\\quiz-frontend\\src\\components\\QuizPage.js":"6","H:\\Code\\Synoptic\\quiz-manager\\quiz-frontend\\src\\components\\QuizSelector.js":"7","H:\\Code\\Synoptic\\quiz-manager\\quiz-frontend\\src\\components\\QuizAnswerBox.js":"8","H:\\Code\\Synoptic\\quiz-manager\\quiz-frontend\\src\\components\\Navbar.js":"9","H:\\Code\\Synoptic\\quiz-manager\\quiz-frontend\\src\\components\\Login.js":"10","H:\\Code\\Synoptic\\quiz-manager\\quiz-frontend\\src\\components\\QuizEditPage.js":"11","H:\\Code\\Synoptic\\quiz-manager\\quiz-frontend\\src\\components\\QuizEditBox.js":"12"},{"size":221,"mtime":1607512233707,"results":"13","hashOfConfig":"14"},{"size":2200,"mtime":1607596778345,"results":"15","hashOfConfig":"14"},{"size":1040,"mtime":1607607498853,"results":"16","hashOfConfig":"14"},{"size":263,"mtime":1607443351421,"results":"17","hashOfConfig":"14"},{"size":305,"mtime":1607442403427,"results":"18","hashOfConfig":"14"},{"size":2315,"mtime":1607597612821,"results":"19","hashOfConfig":"14"},{"size":633,"mtime":1607515045293,"results":"20","hashOfConfig":"14"},{"size":2328,"mtime":1607616421937,"results":"21","hashOfConfig":"14"},{"size":632,"mtime":1607518116081,"results":"22","hashOfConfig":"14"},{"size":1302,"mtime":1607531718285,"results":"23","hashOfConfig":"14"},{"size":6232,"mtime":1607602010925,"results":"24","hashOfConfig":"14"},{"size":3470,"mtime":1607601637471,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"142lahx",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"28"},"H:\\Code\\Synoptic\\quiz-manager\\quiz-frontend\\src\\index.js",[],["54","55"],"H:\\Code\\Synoptic\\quiz-manager\\quiz-frontend\\src\\App.js",[],"H:\\Code\\Synoptic\\quiz-manager\\quiz-frontend\\src\\components\\Home.js",[],"H:\\Code\\Synoptic\\quiz-manager\\quiz-frontend\\src\\components\\Secret.js",[],"H:\\Code\\Synoptic\\quiz-manager\\quiz-frontend\\src\\components\\Error.js",[],"H:\\Code\\Synoptic\\quiz-manager\\quiz-frontend\\src\\components\\QuizPage.js",[],"H:\\Code\\Synoptic\\quiz-manager\\quiz-frontend\\src\\components\\QuizSelector.js",[],["56","57"],"H:\\Code\\Synoptic\\quiz-manager\\quiz-frontend\\src\\components\\QuizAnswerBox.js",[],"H:\\Code\\Synoptic\\quiz-manager\\quiz-frontend\\src\\components\\Navbar.js",["58"],"import React from 'react';\r\n\r\nclass Navbar extends React.Component{\r\n\r\n    render(){\r\n        return(\r\n            <div className = \"navbar\">\r\n                <ul>\r\n                    {localStorage.getItem('username') !== \"\" ? \r\n                    <li>Welcome, {localStorage.getItem('username')}</li>\r\n                    : \"\" }\r\n                    <li><a href = \"/\">Home</a></li>\r\n                    <li><a href = \"/secret\">Secret page</a></li>\r\n                    <li><a href = \"#\" onClick = {this.props.handleLogout}>Logout</a></li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Navbar","H:\\Code\\Synoptic\\quiz-manager\\quiz-frontend\\src\\components\\Login.js",[],"H:\\Code\\Synoptic\\quiz-manager\\quiz-frontend\\src\\components\\QuizEditPage.js",[],"H:\\Code\\Synoptic\\quiz-manager\\quiz-frontend\\src\\components\\QuizEditBox.js",["59","60","61","62","63"],"import React from 'react';\r\n\r\nclass QuizEditBox extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            answers: []\r\n        }\r\n\r\n        this.handleAnswerBoxChange = this.handleAnswerBoxChange.bind(this)\r\n        this.handleQuestionChange = this.handleQuestionChange.bind(this)\r\n        this.handleQuestionDelete = this.handleQuestionDelete.bind(this)\r\n        this.handleCorrectAnswerChange = this.handleCorrectAnswerChange.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        console.log(\"Fetching answers for \" + this.props.question_id)\r\n        fetch(\"http://127.0.0.1:5000/api/answers/\" + this.props.question_id)\r\n        .then(result => result.json())\r\n        .then(result => {\r\n\r\n            for(var i = 0; i < 5; i++){\r\n                if(result[i] == undefined){\r\n                    result[i] = {\r\n                        is_correct: 0,\r\n                        text: \"\",\r\n                        answer_id: 0,\r\n                        question_id: this.props.question_id\r\n                    }\r\n\r\n                if(i == 0 && result[0].text == \"\"){\r\n                    result[0].text = \"Answer.\"\r\n                }\r\n                \r\n                }\r\n            }\r\n\r\n            // Now make sure the first answer is the correct one if there isn't an is_correct yet present\r\n            var is_correct_found = false\r\n            \r\n            result.forEach(result => {if(result.is_correct === 1){\r\n                is_correct_found = true\r\n            }})\r\n\r\n            if(!is_correct_found){\r\n                result[0].is_correct = 1\r\n            }\r\n\r\n            this.setState({answers: result})\r\n            this.props.handleAnswerChange(this.props.question_id, this.state.answers)\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n    handleAnswerBoxChange(event){\r\n        var answers = this.state.answers\r\n        answers[event.target.name].text = event.target.value\r\n        this.setState({answers: answers})\r\n        this.props.handleAnswerChange(this.props.question_id, this.state.answers)\r\n    }\r\n\r\n    handleCorrectAnswerChange(event){\r\n        console.log(\"ITS HAPPENING\")\r\n        this.props.handleCorrectAnswerChange(event.target.id, event.target.value)\r\n    }\r\n\r\n    handleQuestionChange(event){\r\n        this.props.handleQuestionChange(event, this.props.question_id)\r\n    }\r\n\r\n    handleQuestionDelete(event){\r\n        this.props.handleQuestionDelete(this.props.question_id)\r\n    }\r\n\r\n    render(){\r\n\r\n        var correct_answer_text = \"\"\r\n        this.state.answers.forEach(answer => {if(answer.is_correct === 1){correct_answer_text=answer.text}})\r\n\r\n        return(\r\n            <div className=\"quiz-box\">\r\n                Question: <input name={this.props.question_id} value={this.props.text} onChange={this.handleQuestionChange}/>\r\n                {this.state.answers.map((element, index) => <div> <input name={index} onChange={this.handleAnswerBoxChange} value={element.text}/><br/></div>)}\r\n                <a href = '#' onClick={this.handleQuestionDelete} className=\"quiz-edit\">Delete</a>\r\n                Correct answer: <select onChange={this.handleCorrectAnswerChange} id={this.props.question_id}>\r\n                    {this.state.answers.filter(answer => answer.text !== \"\").map((element, index) => <option value={element.text}>{element.text}</option>)}\r\n                </select>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default QuizEditBox;",{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"64","replacedBy":"68"},{"ruleId":"66","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":14,"column":25,"nodeType":"72","endLine":14,"endColumn":75},{"ruleId":"73","severity":1,"message":"74","line":25,"column":30,"nodeType":"75","messageId":"76","endLine":25,"endColumn":32},{"ruleId":"73","severity":1,"message":"74","line":33,"column":22,"nodeType":"75","messageId":"76","endLine":33,"endColumn":24},{"ruleId":"73","severity":1,"message":"74","line":33,"column":45,"nodeType":"75","messageId":"76","endLine":33,"endColumn":47},{"ruleId":"77","severity":1,"message":"78","line":80,"column":75,"nodeType":"79","messageId":"80","endLine":80,"endColumn":94},{"ruleId":"70","severity":1,"message":"71","line":86,"column":17,"nodeType":"72","endLine":86,"endColumn":89},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],["81"],["82"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'correct_answer_text' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]